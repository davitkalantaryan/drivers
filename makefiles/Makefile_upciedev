MODULE_NAME = upciedev

KVERSION = $(shell uname -r)
HOSTNAME2 = $(shell hostname)
KO_FILES = ../../../ko_files/$(HOSTNAME2)_$(KVERSION)
SOURCES_DIR=../../../sources
CUR_DIR=$(PWD)

ALL_SOURCES1=\
$(SOURCES_DIR)/criticalregionlock.h \
$(SOURCES_DIR)/debug_functions.h \
$(SOURCES_DIR)/pciedev_io.h \
$(SOURCES_DIR)/pciedev_ufn.h  \
$(SOURCES_DIR)/read_write_inline.h \
\
$(SOURCES_DIR)/criticalregionlock.c \
$(SOURCES_DIR)/pciedev_ioctl_exp.c \
$(SOURCES_DIR)/pciedev_probe_exp.c \
$(SOURCES_DIR)/pciedev_remove_exp.c \
$(SOURCES_DIR)/pciedev_rw_exp.c \
$(SOURCES_DIR)/pciedev_ufn.c \
$(SOURCES_DIR)/upciedev_drv.c 

ALL_SOURCES=\
criticalregionlock.h \
debug_functions.h \
pciedev_io.h \
pciedev_ufn.h  \
read_write_inline.h \
\
criticalregionlock.c \
pciedev_ioctl_exp.c \
pciedev_probe_exp.c \
pciedev_remove_exp.c \
pciedev_rw_exp.c \
pciedev_ufn.c \
upciedev_drv.c 


$(MODULE_NAME)-objs := \
	upciedev_drv.o \
	pciedev_ufn.o \
	pciedev_probe_exp.o \
	pciedev_remove_exp.o \
	pciedev_rw_exp.o \
	pciedev_ioctl_exp.o \
	criticalregionlock.o

obj-m := $(MODULE_NAME).o 

#all: compile install
all: compile
default: compile

copy:
	sudo cp $(KO_FILES)/$(MODULE_NAME).ko /lib/modules/$(KVERSION)/desy_zeuthen/.
install:
	#-sudo rmmod pcie_gen_drv
	#sudo insmod pcie_gen_drv.ko
	#sudo cp pcie_gen_drv.ko /lib/modules/$(KVERSION)/desy_zeuthen/.
compinstall:
	#cp $(ALL_SOURCES1) .
	#make -C /lib/modules/$(KVERSION)/build M=$(PWD) modules
	#mkdir -p $(HOSTNAME2)
	#cp Module.symvers Module.symvers.$(HOSTNAME2).$(KVERSION)
	#mv $(MODULE_NAME).ko $(HOSTNAME2)/.
	#rm upciedev.ko $(ALL_SOURCES)
	#-sudo rmmod pcie_gen_drv
	#sudo insmod pcie_gen_drv.ko
	#sudo chmod 666 /dev/pcie_gen_init
compile:
	cp $(ALL_SOURCES1) .
	make -C /lib/modules/$(KVERSION)/build M=$(PWD) modules
	mkdir -p $(KO_FILES)
	cp Module.symvers $(KO_FILES)/Module.symvers.$(MODULE_NAME)
	mv $(MODULE_NAME).ko $(KO_FILES)/.
	rm $(ALL_SOURCES)
clean:
	#rm $(ALL_SOURCES)
	rm -f *.c
	rm -f *.h
	rm -f $(KO_FILES)/$(MODULE_NAME).ko
	rm -f $(KO_FILES)/Module.symvers.$(MODULE_NAME)
	test ! -d /lib/modules/$(KVERSION) || make -C /lib/modules/$(KVERSION)/build M=$(PWD) clean
	
	
#EXTRA_CFLAGS	+= -I/usr/include
#EXTRA_CFLAGS	+= -I/doocs/develop/include
#EXTRA_CFLAGS	+= -I/doocs/develop/common/include
EXTRA_CFLAGS	+= -DUSE_SEMAPHORE

