

#DOOCS	=	/afs/ifh.de/group/pitz/doocs
#SYSTEM	=	i586_rhel50
#SYSTEM	=	amd64_rhel60
#SYSTEM	= sun4x_58
#MY_ROOT = /doocs/develop/kalantar
#RUNDIRECTORY = /export/doocs/server/adcsender


OS		= $(shell uname -s)

ifeq ($(OS),Linux)
	CPP = g++
	LINK = g++
	CFLAGS= -O2 -DLINUX -D_REENTRANT -D_GNU_SOURCE -D_BSD -D__USE_GNU -D__USE_UNIX98
	LFLAGS  = -O2
	#LIBS= -O2 -lpthread -lrt -lresolv -lnsl
	LIBS= -lpthread
	
	TARGET = test_dmesg_lin
	 
else
	# Both compilers works
	CPP = CC
	LINK = CC
	#CPP = g++
	#LINK = g++
	CFLAGS= -O2 -DLINUX -D_REENTRANT -D_GNU_SOURCE -D_BSD -D__USE_GNU -D__USE_UNIX98 
	LFLAGS  = -O2
	LIBS = -lsocket -lnsl -lpthread -lrt
	#LIBS = -lpthread -lrt -lsocket
	
	TARGET = test_dmesg_sol
endif



all: $(TARGET)


##########################################################################################################

test_dmesg.o: 
	$(CPP) -c $(CFLAGS) -o test_dmesg.o	test_dmesg.cpp
	
consolefunctions1.o: 
	$(CPP) -c $(CFLAGS) -o consolefunctions1.o	../../aallfiles/sources/consolefunctions1.c
	
systemcalls.o: 
	$(CPP) -c $(CFLAGS) -o systemcalls.o	../../aallfiles/sources/systemcalls.cpp
	
createnewprocess1.o: 
	$(CPP) -c $(CFLAGS) -o createnewprocess1.o	../../aallfiles/sources/createnewprocess1.c
			


$(TARGET): test_dmesg.o consolefunctions1.o systemcalls.o createnewprocess1.o
						@echo "*** Linking $(TARGET)"
						$(LINK) *.o $(LIBS) $(LFLAGS) -o $(TARGET)
						#@rm -f *.o
						#@cp $(TARGET) $(RUNDIRECTORY)/$(TARGET)
						

# Rule for generating object files from C++ source files
.cpp.o: 
	@echo "*** Compiling $<"
	$(CPP) -c $(CFLAGS) $<
	#$(CPP) -c $(CFLAGS) -o "$@" "$<"
	#$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

clean:	
	@rm -f *.o

